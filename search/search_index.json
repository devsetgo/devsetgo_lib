{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"CI/CD Pipeline: SonarCloud: DevSetGo Common Library \u00b6 NOTE: This is a beta version and not ready for use. A set of common functions wrapped into a package, so I don't have to write the same code over and over. Oh and it makes the code more reusable.... or something like that. Testing \u00b6 Test on Windows, Linux, and MacOS. Since I work in Windows and Linux and don't use MacOS, it is only tested via Github Actions for MacOS. Let me know if there is any issue. Library Functions \u00b6 file_functions CSV File Functions JSON File Functions Text File Functions Folder Functions Make Directory List Changes Directory List","title":"Introduction"},{"location":"#devsetgo-common-library","text":"NOTE: This is a beta version and not ready for use. A set of common functions wrapped into a package, so I don't have to write the same code over and over. Oh and it makes the code more reusable.... or something like that.","title":"DevSetGo Common Library"},{"location":"#testing","text":"Test on Windows, Linux, and MacOS. Since I work in Windows and Linux and don't use MacOS, it is only tested via Github Actions for MacOS. Let me know if there is any issue.","title":"Testing"},{"location":"#library-functions","text":"file_functions CSV File Functions JSON File Functions Text File Functions Folder Functions Make Directory List Changes Directory List","title":"Library Functions"},{"location":"contribute/","text":"Contributing \u00b6 Please feel to contribute to this project. Adding common functions is the intent and if you have one to add or improve an existing it is greatly appreciated. Ways to Contribute! \u00b6 Add or improve a function Add or improve documentation Add or improve Tests Report or fix a bug","title":"Contributing"},{"location":"contribute/#contributing","text":"Please feel to contribute to this project. Adding common functions is the intent and if you have one to add or improve an existing it is greatly appreciated.","title":"Contributing"},{"location":"contribute/#ways-to-contribute","text":"Add or improve a function Add or improve documentation Add or improve Tests Report or fix a bug","title":"Ways to Contribute!"},{"location":"file_functions/","text":"File Functions \u00b6 TODO: \u00b6 Create configuration for library to specify custom configurations Create Sample Data \u00b6 create_sample_files(filename: str, sample_size: int) Pass in file name without an extension (.json or .csv) and the sample size. The function will create a CSV and JSON file with the resulting files in /data/csv and /data/json folders from devsetgo_lib.file_functions import create_sample_files create_sample_files ( filename = \"test_file\" , sample_size = 1000 ) Create and open a CSV file \u00b6 Save CSV \u00b6 save_csv(file_name=\"your-file-name.csv\", data=example_list, root_folder=\"/data\", delimiter=\",\", quotechar='\"') Required fields are filename and data (must be a list). Optional Fields: root_folder : Default folder is \"/data/\" delimiter : Default is ',' and must be a single printable character quotechar : Default is '\"' and must be a single printable character <<<<<<< HEAD <<<<<<< HEAD ======= ======= root_folder : By default, the root_dir is \"data\"* . The results will be in /data/csv folder, unless root_folder*** is defined. delimiter : Default is ',', must be a single printable character quotechar : Default is '\"', must be a single printable character \u00b6 >>>>>>> update for text fixes \u00b6 522a206fe779fe353d019608379b0335c20eb3c7 Open CSV \u00b6 open_csv(filename: str, delimit: str = None) Required filed of filename and optional delimiter field (delimit=). Quoting is set to minimal and initial spaces will be skipped (removed). Output result is a dictionary/json object. from devsetgo_lib.file_functions import save_csv , open_csv data = [[ 'num' , '1' , '2' , '3' ], [ f ' { i } ' , \"a\" , \"b\" , \"c\" ]] save_csv ( filename = \"test.csv\" , datad = data , root_folder = None , delimiter = None , quotechar = None ) result = open_csv ( filename = \"test.csv\" ) print ( result ) Note: Data being sent is a list of lists. Each row in a csv is a list. So construct the data in a similar fashion as such. Otherwise the data will not persist as you expect. data = [] count = 1 header = [ \"column 1\" , \"column 2\" , \"column 3\" , \"column 4\" ] data . append ( header ) for _ in range ( 10 ): row = [ \"this\" , \"is\" , \"row\" , numb ] data . append ( row ) count += 1 Create and open a JSON file \u00b6 save_json(filename: str, data: list, root_folder: str = None) Required fields are filename and data (must be a list). Optional is the root_folder . By default, the root_dir is \"data\"* . The results will be in /data/json folder, unless root_folder*** is defined. open_json(filename: str) Required filed of filename and optional delimiter field (delimit=). Quoting is set to minimal and initial spaces will be skipped (removed). from devsetgo_lib.file_functions import save_json , open_json json_data = { \"name\" : \"John\" , \"age\" : 30 , \"cars\" : [ \"Ford\" , \"BMW\" , \"Fiat\" ]} save_json ( filename = \"test.json\" , data = json_data , root_folder = \"data\" ) result = open_json ( filename = \"test.json\" ) print ( result ) Create and open a Text file \u00b6 save_text(filename: str, data: list, root_folder: str = None) Required fields are filename and data (must be a list). Optional is the root_folder . By default, the root_dir is \"data\"* . The results will be in /data/text folder, unless root_folder*** is defined. open_text(filename: str) Required filed of filename and output is a string. Output result will be in /data/text folder. from devsetgo_lib.file_functions import save_text , open_text html = \"\"\" <!DOCTYPE html> <html> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html> \"\"\" file_functions . save_text ( filename = \"test.html\" , data = html ) result = open_text ( filename = \"test.json\" ) print ( result ) Delete File \u00b6 delete_file(file_name: str) Required fields are filename . Based on extension, the file will be removed. If the extension is other than .json or .csv, the file to removed will be removed from the data/text folder. from devsetgo_lib.file_functions import delete_file delete_file ( filename = \"test.html\" , data = html )","title":"FileFunctions"},{"location":"file_functions/#file-functions","text":"","title":"File Functions"},{"location":"file_functions/#todo","text":"Create configuration for library to specify custom configurations","title":"TODO:"},{"location":"file_functions/#create-sample-data","text":"create_sample_files(filename: str, sample_size: int) Pass in file name without an extension (.json or .csv) and the sample size. The function will create a CSV and JSON file with the resulting files in /data/csv and /data/json folders from devsetgo_lib.file_functions import create_sample_files create_sample_files ( filename = \"test_file\" , sample_size = 1000 )","title":"Create Sample Data"},{"location":"file_functions/#create-and-open-a-csv-file","text":"","title":"Create and open a CSV file"},{"location":"file_functions/#save-csv","text":"save_csv(file_name=\"your-file-name.csv\", data=example_list, root_folder=\"/data\", delimiter=\",\", quotechar='\"') Required fields are filename and data (must be a list). Optional Fields: root_folder : Default folder is \"/data/\" delimiter : Default is ',' and must be a single printable character quotechar : Default is '\"' and must be a single printable character <<<<<<< HEAD <<<<<<< HEAD ======= ======= root_folder : By default, the root_dir is \"data\"* . The results will be in /data/csv folder, unless root_folder*** is defined. delimiter : Default is ',', must be a single printable character","title":"Save CSV"},{"location":"file_functions/#quotechar-default-is-must-be-a-single-printable-character","text":"","title":"quotechar: Default is '\"', must be a single printable character"},{"location":"file_functions/#update-for-text-fixes","text":"522a206fe779fe353d019608379b0335c20eb3c7","title":"&gt;&gt;&gt;&gt;&gt;&gt;&gt; update for text fixes"},{"location":"file_functions/#open-csv","text":"open_csv(filename: str, delimit: str = None) Required filed of filename and optional delimiter field (delimit=). Quoting is set to minimal and initial spaces will be skipped (removed). Output result is a dictionary/json object. from devsetgo_lib.file_functions import save_csv , open_csv data = [[ 'num' , '1' , '2' , '3' ], [ f ' { i } ' , \"a\" , \"b\" , \"c\" ]] save_csv ( filename = \"test.csv\" , datad = data , root_folder = None , delimiter = None , quotechar = None ) result = open_csv ( filename = \"test.csv\" ) print ( result ) Note: Data being sent is a list of lists. Each row in a csv is a list. So construct the data in a similar fashion as such. Otherwise the data will not persist as you expect. data = [] count = 1 header = [ \"column 1\" , \"column 2\" , \"column 3\" , \"column 4\" ] data . append ( header ) for _ in range ( 10 ): row = [ \"this\" , \"is\" , \"row\" , numb ] data . append ( row ) count += 1","title":"Open CSV"},{"location":"file_functions/#create-and-open-a-json-file","text":"save_json(filename: str, data: list, root_folder: str = None) Required fields are filename and data (must be a list). Optional is the root_folder . By default, the root_dir is \"data\"* . The results will be in /data/json folder, unless root_folder*** is defined. open_json(filename: str) Required filed of filename and optional delimiter field (delimit=). Quoting is set to minimal and initial spaces will be skipped (removed). from devsetgo_lib.file_functions import save_json , open_json json_data = { \"name\" : \"John\" , \"age\" : 30 , \"cars\" : [ \"Ford\" , \"BMW\" , \"Fiat\" ]} save_json ( filename = \"test.json\" , data = json_data , root_folder = \"data\" ) result = open_json ( filename = \"test.json\" ) print ( result )","title":"Create and open a JSON file"},{"location":"file_functions/#create-and-open-a-text-file","text":"save_text(filename: str, data: list, root_folder: str = None) Required fields are filename and data (must be a list). Optional is the root_folder . By default, the root_dir is \"data\"* . The results will be in /data/text folder, unless root_folder*** is defined. open_text(filename: str) Required filed of filename and output is a string. Output result will be in /data/text folder. from devsetgo_lib.file_functions import save_text , open_text html = \"\"\" <!DOCTYPE html> <html> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html> \"\"\" file_functions . save_text ( filename = \"test.html\" , data = html ) result = open_text ( filename = \"test.json\" ) print ( result )","title":"Create and open a Text file"},{"location":"file_functions/#delete-file","text":"delete_file(file_name: str) Required fields are filename . Based on extension, the file will be removed. If the extension is other than .json or .csv, the file to removed will be removed from the data/text folder. from devsetgo_lib.file_functions import delete_file delete_file ( filename = \"test.html\" , data = html )","title":"Delete File"},{"location":"folder_functions/","text":"Folder Functions \u00b6 Working on it....","title":"FolderFunctions"},{"location":"folder_functions/#folder-functions","text":"Working on it....","title":"Folder Functions"},{"location":"quickstart/","text":"Quick Start \u00b6 Install \u00b6 pip install devsetgo - lib Simple Use \u00b6 Create Sample Data \u00b6 Result will be in /data/csv and /data/json folders from devsetgo_lib.file_functions import create_sample_files create_sample_files ( \"test_file\" , sample_size = 1000 ) Create and open a CSV file \u00b6 Result will be in /data/csv folder from devsetgo_lib.file_functions import save_csv , open_csv data = [[ 'num' , '1' , '2' , '3' ], [ f ' { i } ' , \"a\" , \"b\" , \"c\" ]] save_csv ( \"test.csv\" , data ) result = open_csv ( \"test.csv\" ) print ( result ) Create and open a JSON file \u00b6 Result will be in /data/csv folder from devsetgo_lib.file_functions import save_json , open_json json_data = { \"name\" : \"John\" , \"age\" : 30 , \"cars\" : [ \"Ford\" , \"BMW\" , \"Fiat\" ]} file_functions . save_json ( \"test.json\" , json_data ) result = open_json ( \"test.json\" ) print ( result ) Create and open a Text file \u00b6 Result will be in /data/text folder from devsetgo_lib.file_functions import save_text , open_text html = \"\"\" <!DOCTYPE html> <html> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html> \"\"\" file_functions . save_text ( \"test.html\" , html ) result = open_text ( \"test.json\" ) print ( result )","title":"QuickStart"},{"location":"quickstart/#quick-start","text":"","title":"Quick Start"},{"location":"quickstart/#install","text":"pip install devsetgo - lib","title":"Install"},{"location":"quickstart/#simple-use","text":"","title":"Simple Use"},{"location":"quickstart/#create-sample-data","text":"Result will be in /data/csv and /data/json folders from devsetgo_lib.file_functions import create_sample_files create_sample_files ( \"test_file\" , sample_size = 1000 )","title":"Create Sample Data"},{"location":"quickstart/#create-and-open-a-csv-file","text":"Result will be in /data/csv folder from devsetgo_lib.file_functions import save_csv , open_csv data = [[ 'num' , '1' , '2' , '3' ], [ f ' { i } ' , \"a\" , \"b\" , \"c\" ]] save_csv ( \"test.csv\" , data ) result = open_csv ( \"test.csv\" ) print ( result )","title":"Create and open a CSV file"},{"location":"quickstart/#create-and-open-a-json-file","text":"Result will be in /data/csv folder from devsetgo_lib.file_functions import save_json , open_json json_data = { \"name\" : \"John\" , \"age\" : 30 , \"cars\" : [ \"Ford\" , \"BMW\" , \"Fiat\" ]} file_functions . save_json ( \"test.json\" , json_data ) result = open_json ( \"test.json\" ) print ( result )","title":"Create and open a JSON file"},{"location":"quickstart/#create-and-open-a-text-file","text":"Result will be in /data/text folder from devsetgo_lib.file_functions import save_text , open_text html = \"\"\" <!DOCTYPE html> <html> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html> \"\"\" file_functions . save_text ( \"test.html\" , html ) result = open_text ( \"test.json\" ) print ( result )","title":"Create and open a Text file"},{"location":"regex/","text":"RegEx Functions \u00b6 Working on it....","title":"RegExFunctions"},{"location":"regex/#regex-functions","text":"Working on it....","title":"RegEx Functions"}]}