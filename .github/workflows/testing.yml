name: Testing

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.13","3.12","3.11","3.10","3.9"]
        db: [sqlite, postgres, mysql, mssql, oracle]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=5
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "Your_password123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q \"SELECT 1\"" --health-interval 10s --health-timeout 5s --health-retries 5
      oracle:
        image: container-registry.oracle.com/database/free:latest
        ports:
          - 1521:1521
        env:
          ORACLE_PWD: "oracle"
        options: >-
          --health-cmd "echo 'SELECT 1 FROM DUAL;' | sqlplus -s sys/oracle@localhost:1521/FREE as sysdba"
          --health-interval 10s --health-timeout 5s --health-retries 10
    env:
      SQLITE_URL: "sqlite+aiosqlite:///:memory:?cache=shared"
      POSTGRES_URL: "postgresql+asyncpg://postgres:postgres@localhost:5432/test"
      MYSQL_URL: "mysql+aiomysql://root:root@localhost:3306/test"
      MSSQL_URL: "mssql+pyodbc://sa:Your_password123@localhost:1433/test?driver=ODBC+Driver+17+for+SQL+Server"
      ORACLE_URL: "oracle+oracledb://system:oracle@localhost:1521/XE"

    steps:
      - uses: actions/checkout@v4
      - name: Wait for database
        if: matrix.db != 'sqlite'
        run: |
          for i in {1..30}; do
            case "${{ matrix.db }}" in
              postgres) pg_isready -h localhost -p 5432 && break;;
              mysql) mysqladmin ping -h localhost -u root -proot && break;;
              mssql) /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q "SELECT 1" && break;;
              oracle) echo "SELECT 1 FROM DUAL;" | sqlplus -s system/oracle@localhost:1521/XE && break;;
            esac
            echo -n .; sleep 2
          done
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt
          pip install pytest aiomysql pyodbc asyncpg oracledb
      - name: Export DATABASE_URL
        run: |
          case ${{ matrix.db }} in
            sqlite)   echo "DATABASE_URL=$SQLITE_URL" >> $GITHUB_ENV;;
            postgres) echo "DATABASE_URL=$POSTGRES_URL" >> $GITHUB_ENV;;
            mysql)    echo "DATABASE_URL=$MYSQL_URL" >> $GITHUB_ENV;;
            mssql)    echo "DATABASE_URL=$MSSQL_URL" >> $GITHUB_ENV;;
            oracle)   echo "DATABASE_URL=$ORACLE_URL" >> $GITHUB_ENV;;
          esac
      - name: Test with pytest
        run: pytest -q
