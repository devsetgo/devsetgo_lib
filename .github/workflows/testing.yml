name: Testing

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]
        include:
          - db: sqlite
            db_url: "sqlite:///test.db"
          - db: postgres
            db_url: "postgresql://postgres:postgres@localhost:5432/postgres"
          - db: oracle
            db_url: "oracle+cx_oracle://user:password@localhost:1521/?service_name=orclpdb1"
          - db: mysql
            db_url: "mysql+mysqlconnector://user:password@localhost:3306/test"
          - db: sqlserver
            db_url: "mssql+pyodbc://user:password@localhost:1433/test?driver=ODBC+Driver+17+for+SQL+Server"
    # For example, we only run the Postgres container if testing against Postgres
    services:
      postgresdbTest:
        image: postgres:latest
        if: ${{ matrix.db == 'postgres' }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: ${{ matrix.db_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Wait for PostgreSQL to become ready
        if: ${{ matrix.db == 'postgres' }}
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 && echo Success && exit 0
            echo -n .
            sleep 2
          done
          echo Failed waiting for Postgres && exit 1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clear pip cache
        run: pip cache purge
      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
