name: Deploy Documentation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (leave empty for auto-detection)'
        required: false
        type: string
      aliases:
        description: 'Aliases (comma-separated, e.g., latest,stable)'
        required: false
        default: 'latest,stable'
        type: string

jobs:
  deploy-docs:
    name: Deploy versioned documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for pushing to gh-pages
      pages: write     # Required for GitHub Pages
      id-token: write  # Required for GitHub Pages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history for mike to work properly

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mike

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare documentation files
        run: |
          python3 scripts/update_docs.py
          python3 scripts/changelog.py
          cp README.md docs/index.md
          cp CONTRIBUTING.md docs/contribute.md
          cp CHANGELOG.md docs/release-notes.md
          echo "Documentation files prepared"

      - name: Deploy documentation
        run: |
          # Parse aliases input
          ALIASES_INPUT="${{ github.event.inputs.aliases }}"
          ALIASES_ARRAY=(${ALIASES_INPUT//,/ })

          # Build command
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            # Use specified version
            VERSION="${{ github.event.inputs.version }}"
            python3 scripts/deploy_docs.py deploy \
              --version "$VERSION" \
              --aliases "${ALIASES_ARRAY[@]}" \
              --title "Release $VERSION" \
              --push
          else
            # Use automatic version detection
            python3 scripts/deploy_docs.py deploy \
              --aliases "${ALIASES_ARRAY[@]}" \
              --push
          fi
